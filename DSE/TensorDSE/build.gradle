import org.apache.tools.ant.filters.*
import java.util.regex.*

version '1.0'

apply plugin: 'application'

repositories {
    flatDir {
        dirs '/usr/share/java', 'libs', '/opt/gurobi952/linux64/lib/'
    }

    jcenter()
    mavenCentral()
}

dependencies {
    compile files('libs/gurobi95.jar')
    compile fileTree(include: ['*.jar'], dir: '/opt/gurobi952/linux64/lib/')
    
    compile project(':opendse-model')
    compile project(':opendse-io')
    compile project(':opendse-visualization')
    compile project(':opendse-optimization')
    // compile project(':opendse-realtime')
    compile group: 'com.google.code.gson', name: 'gson', version: '2.7'

    implementation 'com.github.SDARG.opt4j:opt4j-core:-SNAPSHOT'
    implementation 'com.github.SDARG.opt4j:opt4j-satdecoding:-SNAPSHOT'
    implementation 'com.github.SDARG.opt4j:opt4j-optimizers:-SNAPSHOT'
    implementation 'com.github.SDARG.opt4j:opt4j-viewer:-SNAPSHOT'

    implementation 'net.sourceforge.argparse4j:argparse4j:0.9.0'
    implementation 'org.javatuples:javatuples:1.2'
    implementation 'com.google.ortools:ortools-java:9.0.9048'
}

task filterSources(type: Copy) {
    from('src/main/java') {
        include '**/*.java'
        filter { String line ->
            if (line.matches('(import|@Suppress|package|@Parent).*')) {
                ''
            } else {
                line.replaceAll('&', "&amp;").replaceAll('<', "&lt;").replaceAll('>', "&gt;")
            }
        }
        def regexp = new org.apache.tools.ant.types.RegularExpression()
        regexp.pattern = '[^ \n\t\r]+'
        filter(org.apache.tools.ant.filters.LineContainsRegExp, regexps:[regexp])
    }
    into new File(project.buildDir, 'tutorialsrc')
}

task filterXML(type: Copy) {
    from('specs') {
        include '**/*.xml'
        filter { String line ->
            line.replaceAll('&', "&amp;").replaceAll('<', "&lt;").replaceAll('>', "&gt;")
        }
        def regexp = new org.apache.tools.ant.types.RegularExpression()
        regexp.pattern = '[^ \n\t\r]+'
        filter(org.apache.tools.ant.filters.LineContainsRegExp, regexps:[regexp])
    }
    into new File(project.buildDir, 'tutorialsrc')
}

mainClassName = 'net.sf.opendse.TensorDSE.TensorDSE'
